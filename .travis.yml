# In the YML below each job gets an environment that includes
# BUILD_OS and BUILD_MODE. The variables are used in the driver
# scripts and is used to select a test. For example, BUILD_OS=linux
# and BUILD_MODE=all means run 'make all' on Linux. Travis supplies
# Linux based on 'os: linux' key so BUILD_OS is effectively ignored.
# The Android and iOS tests specify a BUILD_ARCH. BUILD_ARCH is passed
# to the underlying setenv-*.sh scripts. For example, testing on iOS,
# BUILD_ARCH=arm64 means 'setenv-ios.sh arm64' is called before
# 'make GNUmakefile-cross' is called.

# DO NOT create top level (global) keys like env, arch, os, compiler.
# The top level/global keys invoke [unwanted] matrix expansion. Also
# see https://stackoverflow.com/q/58473000/608639 and
# https://docs.travis-ci.com/user/reference/overview/ and
# https://docs.travis-ci.com/user/multi-cpu-architectures and
# https://github.com/travis-ci/travis-yml/blob/master/schema.json.

language: cpp
dist: xenial
sudo: required

git:
  depth: 5

# Use jobs rather than matrix since we are precisely
# specifiying our test cases. Do not move any of the
# keys (env, os, arch, compiler, etc) into global.
# Putting them in global invokes the matrix expansion.
jobs:
  include:
    - os: linux
      name: Linux with GCC (all)
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=all
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (native)
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=native
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (no-asm)
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=no-asm
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (debug)
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=debug
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (asan)
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=asan
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (ubsan)
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=ubsan
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (pem)
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=pem
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (autotools)
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=autotools
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (cmake)
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=cmake
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (all)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=all
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (native)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=native
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (no-asm)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=no-asm
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (debug)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=debug
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (asan)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=asan
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (ubsan)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=ubsan
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (pem)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=pem
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (autotools)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=autotools
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (cmake)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=cmake
        - BUILD_JOBS=2
    - os: osx
      osx_image: xcode10.1
      name: OS X with Clang (all)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=osx
        - BUILD_MODE=all
        - BUILD_JOBS=2
    - os: osx
      osx_image: xcode10.1
      name: OS X with Clang (native)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=osx
        - BUILD_MODE=native
        - BUILD_JOBS=2
    - os: osx
      osx_image: xcode10.1
      name: OS X with Clang (no-asm)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=osx
        - BUILD_MODE=no-asm
        - BUILD_JOBS=2
    - os: osx
      osx_image: xcode10.1
      name: OS X with Clang (debug)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=osx
        - BUILD_MODE=debug
        - BUILD_JOBS=2
    - os: osx
      osx_image: xcode10.1
      name: OS X with Clang (asan)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=osx
        - BUILD_MODE=asan
        - BUILD_JOBS=2
    - os: osx
      osx_image: xcode10.1
      name: OS X with Clang (ubsan)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=osx
        - BUILD_MODE=ubsan
        - BUILD_JOBS=2
    - os: osx
      osx_image: xcode10.1
      name: OS X with Clang (pem)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=osx
        - BUILD_MODE=pem
        - BUILD_JOBS=2
    - os: osx
      osx_image: xcode10.1
      name: OS X with Clang (autotools)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=osx
        - BUILD_MODE=autotools
        - BUILD_JOBS=2
    - os: osx
      osx_image: xcode10.1
      name: OS X with Clang (cmake)
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=osx
        - BUILD_MODE=cmake
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (all)
      arch: arm64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=all
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (native)
      arch: arm64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=native
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (no-asm)
      arch: arm64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=no-asm
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (debug)
      arch: arm64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=debug
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (asan)
      arch: arm64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=asan
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (ubsan)
      arch: arm64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=ubsan
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (pem)
      arch: arm64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=pem
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (autotools)
      arch: arm64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=autotools
        - BUILD_JOBS=2
    - os: linux
      name: Linux with GCC (cmake)
      arch: arm64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=cmake
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (all)
      arch: arm64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=all
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (native)
      arch: arm64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=native
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (no-asm)
      arch: arm64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=no-asm
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (debug)
      arch: arm64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=debug
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (asan)
      arch: arm64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=asan
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (ubsan)
      arch: arm64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=ubsan
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (pem)
      arch: arm64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=pem
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (autotools)
      arch: arm64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=autotools
        - BUILD_JOBS=2
    - os: linux
      name: Linux with Clang (cmake)
      arch: arm64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=cmake
        - BUILD_JOBS=2
    - os: linux
      name: Android on Linux (armeabi-v7a)
      arch: amd64
      env:
        - BUILD_OS=linux
        - BUILD_MODE=android
        - BUILD_JOBS=2
        - BUILD_ARCH=armeabi-v7a
        - ANDROID_HOME="$HOME/android-sdk"
        - ANDROID_SDK="$HOME/android-sdk"
        - ANDROID_NDK="$HOME/android-ndk"
        - ANDROID_SDK_ROOT="$ANDROID_SDK"
        - ANDROID_NDK_ROOT="$ANDROID_NDK"
    - os: linux
      name: Android on Linux (aarch64)
      arch: amd64
      env:
        - BUILD_OS=linux
        - BUILD_MODE=android
        - BUILD_JOBS=2
        - BUILD_ARCH=aarch64
        - ANDROID_HOME="$HOME/android-sdk"
        - ANDROID_SDK="$HOME/android-sdk"
        - ANDROID_NDK="$HOME/android-ndk"
        - ANDROID_SDK_ROOT="$ANDROID_SDK"
        - ANDROID_NDK_ROOT="$ANDROID_NDK"
    - os: linux
      name: Android on Linux (x86)
      arch: amd64
      env:
        - BUILD_OS=linux
        - BUILD_MODE=android
        - BUILD_JOBS=2
        - BUILD_ARCH=x86
        - ANDROID_HOME="$HOME/android-sdk"
        - ANDROID_SDK="$HOME/android-sdk"
        - ANDROID_NDK="$HOME/android-ndk"
        - ANDROID_SDK_ROOT="$ANDROID_SDK"
        - ANDROID_NDK_ROOT="$ANDROID_NDK"
    - os: linux
      name: Android on Linux (x86_64)
      arch: amd64
      env:
        - BUILD_OS=linux
        - BUILD_MODE=android
        - BUILD_JOBS=2
        - BUILD_ARCH=x86_64
        - ANDROID_HOME="$HOME/android-sdk"
        - ANDROID_SDK="$HOME/android-sdk"
        - ANDROID_NDK="$HOME/android-ndk"
        - ANDROID_SDK_ROOT="$ANDROID_SDK"
        - ANDROID_NDK_ROOT="$ANDROID_NDK"
    - os: osx
      osx_image: xcode10.1
      name: iOS on OS X (iPhoneOS)
      arch: amd64
      env:
        - BUILD_OS=osx
        - BUILD_MODE=ios
        - BUILD_JOBS=2
        - BUILD_ARCH=iPhoneOS
    - os: osx
      osx_image: xcode10.1
      name: iOS on OS X (Arm64)
      arch: amd64
      env:
        - BUILD_OS=osx
        - BUILD_MODE=ios
        - BUILD_JOBS=2
        - BUILD_ARCH=Arm64
    - os: osx
      osx_image: xcode10.1
      name: iOS on OS X (WatchOS)
      arch: amd64
      env:
        - BUILD_OS=osx
        - BUILD_MODE=ios
        - BUILD_JOBS=2
        - BUILD_ARCH=WatchOS
    - os: osx
      osx_image: xcode10.1
      name: iOS on OS X (AppleTVOS)
      arch: amd64
      env:
        - BUILD_OS=osx
        - BUILD_MODE=ios
        - BUILD_JOBS=2
        - BUILD_ARCH=AppleTVOS
    - os: osx
      osx_image: xcode10.1
      name: iOS on OS X (iPhoneSimulator)
      arch: amd64
      env:
        - BUILD_OS=osx
        - BUILD_MODE=ios
        - BUILD_JOBS=2
        - BUILD_ARCH=iPhoneSimulator
    - os: osx
      osx_image: xcode10.1
      name: iOS on OS X (WatchSimulator)
      arch: amd64
      env:
        - BUILD_OS=osx
        - BUILD_MODE=ios
        - BUILD_JOBS=2
        - BUILD_ARCH=WatchSimulator
    - os: osx
      osx_image: xcode10.1
      name: iOS on OS X (AppleTVSimulator)
      arch: amd64
      env:
        - BUILD_OS=osx
        - BUILD_MODE=ios
        - BUILD_JOBS=2
        - BUILD_ARCH=AppleTVSimulator

  allow_failures:
    - os: osx
      osx_image: xcode10.1
      name: iOS on OS X (WatchOS)
      env:
        - BUILD_OS=osx
        - BUILD_MODE=ios
        - BUILD_JOBS=2
        - BUILD_ARCH=WatchOS
    - os: osx
      osx_image: xcode10.1
      name: iOS on OS X (iPhoneSimulator)
      env:
        - BUILD_OS=osx
        - BUILD_MODE=ios
        - BUILD_JOBS=2
        - BUILD_ARCH=iPhoneSimulator

before_install:
  - |
    if [[ "$BUILD_OS" == "linux" ]] && [[ "$BUILD_MODE" == "android" ]]; then
        # https://github.com/travis-ci/travis-ci/issues/9037
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A145
        sudo apt-get update
        bash TestScripts/install-android.sh
    fi
    if [[ "$BUILD_OS" == "linux" ]] && [[ "$BUILD_MODE" == "autotools" ]]; then
        # https://github.com/travis-ci/travis-ci/issues/9037
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A145
        sudo apt-get install -y autoconf automake libtool
    fi

script:
  - |
    if [[ "$BUILD_MODE" == "ios" ]]; then
        cp TestScripts/setenv-ios.sh .
        cp TestScripts/cryptest-ios.sh .
        bash cryptest-ios.sh "$BUILD_ARCH"
    elif [[ "$BUILD_MODE" == "android" ]]; then
        cp TestScripts/setenv-android.sh .
        cp TestScripts/cryptest-android.sh .
        bash cryptest-android.sh "$BUILD_ARCH"
    elif [[ "$BUILD_MODE" == "autotools" ]]; then
        cp TestScripts/cryptest-autotools.sh .
        bash cryptest-autotools.sh
    elif [[ "$BUILD_MODE" == "cmake" ]]; then
        cp TestScripts/cryptest-cmake.sh .
        bash cryptest-cmake.sh
    elif [[ "$BUILD_MODE" == "pem" ]]; then
        cp TestScripts/cryptest-pem.sh .
        bash cryptest-pem.sh
    elif [[ "$BUILD_MODE" == "debug" ]]; then
        CXXFLAGS="-DDEBUG -g2 -O1" make -j "$BUILD_JOBS"
        ./cryptest.exe v
        ./cryptest.exe tv all
    else
        make "$BUILD_MODE" -j "$BUILD_JOBS"
        ./cryptest.exe v
        ./cryptest.exe tv all
    fi

# Whitelist branches to avoid testing feature branches twice
branches:
  only:
    - master
    - /\/ci$/

addons:
  sonarcloud: false

notifications:
  email:
    recipients:
      - cryptopp-build@googlegroups.com
    on_success: always # default: change
    on_failure: always # default: always
